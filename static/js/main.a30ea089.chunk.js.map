{"version":3,"sources":["components/Loader/loading.gif","logo.png","components/Loader/loader.view.js","components/Loader/index.js","components/Header/index.js","components/Footer/footer.view.js","components/Footer/index.js","components/Feed/feed.view.js","REST/api.js","components/Feed/index.js","instruments/index.js","components/Character/card.view.js","components/Character/index.js","components/ButtonPage/button.view.js","components/ButtonPage/index.js","components/Buttons/index.js","components/Pagination/pagination.view.js","components/Pagination/index.js","components/Sorting/sorting.view.js","components/Sorting/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Div","styled","div","Span","span","Image","img","Loader","alt","src","loading","React","Component","Header","href","title","height","logo","FooterDiv","Footer","Container","api","fetchCards","URL","link","fetch","response","json","results","info","Feed","state","characters","sortingType","isCardsFetching","currentPage","_setCardsFetchingState","setState","_fetchCardsAsync","a","data","_updateSorting","type","_updateCurrentPage","pageString","props","history","push","window","location","search","_increasePageAsync","next","_decreasePageAsync","prev","this","cards","disPrev","disNext","charactersJSX","sort","card1","card2","name","sortByName","status","sortByStatus","species","sortBySpecies","map","character","key","id","toRender","decreasePage","increasePage","page","click","updatePage","Wrapper","Title","h3","Info","ul","Character","image","gender","Button","button","disabled","ButtonPage","onClick","text","Buttons","Ul","Li","li","Pagination","maxPage","pages","pagesJSX","Array","val","i","num","Conteiner","Select","select","Sorting","_handleChange","event","target","value","onChange","App","className","component","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a30ea089.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.f2eb2355.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","// Core\r\nimport styled from \"styled-components\";\r\n\r\nexport default {\r\n    Div: styled.div`\r\n        text-align: center;\r\n        margin: auto;\r\n    `,\r\n    Span: styled.span`\r\n        display: inline-block;\r\n        height: 20rem;\r\n        font-size: 10rem;\r\n        color: #83cc82;\r\n        padding-top:6px;\r\n        vertical-align: top;\r\n    `,\r\n    Image: styled.img`\r\n        height = '10rem'\r\n    `,\r\n};\r\n","// Core\r\nimport React from 'react';\r\nimport loading from './loading.gif';\r\n\r\n// Styled\r\nimport Spinner from \"./loader.view.js\";\r\n\r\nexport default class Loader extends React.Component {\r\n    render () {\r\n        return (\r\n            <Spinner.Div>\r\n                <Spinner.Image\r\n                    alt = 'loading'\r\n                    src = { loading }\r\n                />\r\n                <Spinner.Span>Loading...</Spinner.Span>\r\n            </Spinner.Div>\r\n        );\r\n    }\r\n}\r\n","// Core\r\nimport React from 'react';\r\nimport logo from '../../logo.png';\r\n\r\nexport default function Header () {\r\n    return (\r\n        <header>\r\n            <a href = '/' title = 'To main page'>\r\n                <img alt = 'logo' height = '100px' src = { logo } />\r\n            </a>\r\n        </header>\r\n    );\r\n}\r\n","// Core\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterDiv = styled.div`\r\n        text-align: center;\r\n        margin: 3rem 0 0 0;\r\n        padding: 1.5rem;\r\n        background-color: #6f6f6f;\r\n        color: white;\r\n    `;\r\n\r\nexport default FooterDiv;\r\n","// Core\r\nimport React from 'react';\r\n\r\n// Styled\r\nimport FooterDiv from \"./footer.view.js\";\r\n\r\nexport default function Footer () {\r\n    return (\r\n        <FooterDiv>\r\n            &copy; Rick & Morty\r\n        </FooterDiv>\r\n    );\r\n}\r\n","// Core\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n        text-align: center;\r\n        margin: 1rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n    `;\r\n\r\nexport default Container;\r\n","export const api = {\r\n    async fetchCards (URL) {\r\n\r\n        const link = URL ? URL : \"https://rickandmortyapi.com/api/character/\";\r\n\r\n        const response = await fetch(link);\r\n\r\n        const { results, info } = await response.json();\r\n\r\n        return { results, info };\r\n    },\r\n};\r\n","// Core\r\nimport React, { Component } from 'react';\r\n\r\n// Components\r\nimport {\r\n    Loader,\r\n    Character,\r\n    Pagination,\r\n    Buttons,\r\n    Sorting\r\n} from '../../components';\r\n\r\n// Styled\r\nimport Container from \"./feed.view.js\";\r\n\r\n// Instruments\r\nimport { api } from '../../REST';\r\nimport { sortByGroup } from '../../instruments';\r\n\r\nexport default class Feed extends Component {\r\n    state = {\r\n        info:            {},\r\n        characters:      [],\r\n        sortingType:     '',\r\n        isCardsFetching: false,\r\n        currentPage:     \"?page=1\",\r\n    };\r\n\r\n    componentDidMount () {\r\n        if (window.location.search) {\r\n            this._fetchCardsAsync(\r\n                `https://rickandmortyapi.com/api/character/${window.location.search}`\r\n            );\r\n            this._updateCurrentPage();\r\n\r\n        } else {\r\n            this._fetchCardsAsync();\r\n        }\r\n\r\n    }\r\n\r\n    _setCardsFetchingState = (state) => {\r\n        this.setState({\r\n            isCardsFetching: state,\r\n        });\r\n    }\r\n\r\n    _fetchCardsAsync = async (link) => {\r\n        this._setCardsFetchingState(true);\r\n\r\n        const data = await api.fetchCards(link);\r\n        const characters = data.results;\r\n        const info = data.info;\r\n\r\n        this.setState({\r\n            info,\r\n            characters,\r\n            isCardsFetching: false,\r\n        });\r\n\r\n    };\r\n\r\n    _updateSorting = (type) => {\r\n        this.setState({ sortingType: type });\r\n    };\r\n\r\n    _updateCurrentPage = (pageString) => {\r\n        if (pageString) {\r\n\r\n            this.props.history.push(pageString);\r\n\r\n            this.setState({\r\n                currentPage: pageString,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                currentPage: window.location.search,\r\n            });\r\n        }\r\n    }\r\n\r\n    _increasePageAsync = () => {\r\n        this._fetchCardsAsync(this.state.info.next);\r\n    }\r\n\r\n    _decreasePageAsync = () => {\r\n        this._fetchCardsAsync(this.state.info.prev);\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            isCardsFetching,\r\n            characters,\r\n            sortingType,\r\n            info,\r\n            currentPage,\r\n        } = this.state;\r\n\r\n        const disPrev = !this.state.info.prev;\r\n        const disNext = !this.state.info.next;\r\n\r\n        const charactersJSX = sortByGroup(sortingType, characters).map((character) => {\r\n            return (\r\n                <Character\r\n                    key = { character.id }\r\n                    { ...character }\r\n                />\r\n            );\r\n        });\r\n\r\n        const toRender = isCardsFetching ? <Loader /> :\r\n\r\n        <>\r\n            <Buttons\r\n                decreasePage = { this._decreasePageAsync }\r\n                disNext = { disNext }\r\n                disPrev = { disPrev }\r\n                increasePage = { this._increasePageAsync }\r\n                page = { currentPage }\r\n            />\r\n\r\n            <Pagination\r\n                click = { this._fetchCardsAsync }\r\n                info = { info }\r\n                page = { currentPage }\r\n                updatePage = { this._updateCurrentPage }\r\n            />\r\n\r\n            <Sorting _updateSorting = { this._updateSorting } />\r\n\r\n            <Container>\r\n                {charactersJSX}\r\n            </Container>\r\n        </>;\r\n\r\n        return (\r\n            <>\r\n                {toRender}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","export const sortByName = (cards) => {\r\n    return cards.sort((card1, card2) => {\r\n        if (card1.name > card2.name) {\r\n            return 1;\r\n        } else if (\r\n            card1.name < card2.name\r\n        ) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n};\r\n\r\nexport const sortByStatus = (cards) => {\r\n    return cards.sort((card1, card2) => {\r\n        if (card1.status > card2.status) {\r\n            return 1;\r\n        } else if (\r\n            card1.status < card2.status\r\n        ) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n};\r\n\r\nexport const sortBySpecies = (cards) => {\r\n    return cards.sort((card1, card2) => {\r\n        if (card1.species > card2.species) {\r\n            return 1;\r\n        } else if (\r\n            card1.species < card2.species\r\n        ) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n};\r\n\r\nexport const sortByGroup = (type, cards) => {\r\n    if (type === 'name') {\r\n        return sortByName(cards);\r\n    } else if (type === 'status') {\r\n        return sortByStatus(cards);\r\n    } else if (type === 'species') {\r\n        return sortBySpecies(cards);\r\n    }\r\n\r\n    return cards;\r\n};\r\n","// Core\r\nimport styled from \"styled-components\";\r\n\r\nexport default {\r\n    Wrapper: styled.div`\r\n        width: 200px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        background-color:#eee;\r\n        border: 1px solid #fefefe;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        margin: 1rem;\r\n        box-shadow: 2px 2px 5px #ccc;\r\n    `,\r\n    Title: styled.h3`\r\n        margin-bottom: 10px;\r\n    `,\r\n    Info: styled.ul`\r\n        list-style: none;\r\n        margin: 0;\r\n        padding:0;\r\n    `,\r\n    Image: styled.img`\r\n        width: 200px;\r\n        height: 200px;\r\n        border-radius: 3px;\r\n    `,\r\n};\r\n","// Core\r\nimport React, { Component } from 'react';\r\n\r\n// Styled\r\nimport Card from \"./card.view.js\";\r\n\r\nexport default class Character extends Component {\r\n    render () {\r\n        const character = this.props;\r\n\r\n        const type =  character.type ? <li><em>type:</em> {character.type}</li> : \"\";\r\n\r\n        return (\r\n            <Card.Wrapper>\r\n                <Card.Image\r\n                    src = { character.image }\r\n                    title = { character.name }\r\n                />\r\n                <Card.Title>{character.name}</Card.Title>\r\n                <Card.Info>\r\n                    <li><strong><em>status:</em> {character.status}</strong></li>\r\n                    <li><em>species:</em> {character.species}</li>\r\n                    <li><em>gender:</em> {character.gender}</li>\r\n                    {type}\r\n                </Card.Info>\r\n            </Card.Wrapper>\r\n        );\r\n    }\r\n}\r\n","// Core\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n        text-align: center;\r\n        margin: .5rem;\r\n        padding: 1rem 1.5rem;\r\n        color: white;\r\n        background: #83cc82;\r\n        border: 1px solid #ededed;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        &:hover{\r\n          background: #00b0c7;\r\n        };\r\n        ${(props) => props.disabled ? `\r\n        opacity: 0.5;\r\n        cursor: default;\r\n        background: #ddd;\r\n        &:hover{\r\n          background: #ddd;\r\n        };\r\n        `: \"\"}\r\n    `;\r\n\r\nexport default Button;\r\n","// Core\r\nimport React from 'react';\r\n\r\n// Styled\r\nimport Button from \"./button.view.js\";\r\n\r\nconst ButtonPage = (props) => {\r\n\r\n    const _changePage = () => {\r\n        props.click();\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            disabled = { props.disabled }\r\n            onClick = { _changePage }>\r\n            {props.text}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default ButtonPage;\r\n","// Core\r\nimport React from 'react';\r\n\r\n// Compomemts\r\nimport ButtonPage from \"../ButtonPage\";\r\n\r\nconst Buttons = (props) => {\r\n    return (\r\n        <div>\r\n            <ButtonPage\r\n                click = { props.decreasePage }\r\n                disabled = { props.disPrev }\r\n                text = '<< Prev'\r\n            />\r\n            <ButtonPage\r\n                click = { props.increasePage }\r\n                disabled = { props.disNext }\r\n                text = 'Next >>'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;\r\n","// Core\r\nimport styled from \"styled-components\";\r\n\r\nexport default {\r\n    Wrapper: styled.div`\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 1rem;\r\n  `,\r\n    Ul: styled.ul`\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        list-style: none;\r\n        padding:0;\r\n  `,\r\n    Li: styled.li`\r\n        padding:5px;\r\n        margin: 3px;\r\n        cursor: pointer;\r\n        background-color:#fff;\r\n        border: 1px solid #eee;\r\n        border-radius: 3px;\r\n        box-shadow: 1px 1px 3px #ccc;\r\n        color: #00afc7;\r\n        font-weight: 700;\r\n        size: .8rem;\r\n        ${(props) => props.disabled ? `\r\n        opacity: 0.5;\r\n        cursor: default;\r\n        background: #ddd;\r\n        &:hover{\r\n          background: #ddd;\r\n        };\r\n        `: \"\"}\r\n  `,\r\n};\r\n","// Core\r\nimport React, { Component } from 'react';\r\n\r\n// Styled\r\nimport PageLine from \"./pagination.view.js\";\r\n\r\nexport default class Pagination extends Component {\r\n    render () {\r\n        const { page, click, info, updatePage } = this.props;\r\n\r\n        const maxPage = info.pages;\r\n        const pageList = [...new Array(maxPage)].map((val, i) => this.val = i+1);\r\n\r\n        const pagesJSX = pageList.map((num) => {\r\n            return (\r\n                <PageLine.Li\r\n                    disabled = { page === `?page=${num}` }\r\n                    key = { num }\r\n                    onClick = {\r\n                        () => {\r\n                            if (page !== `?page=${num}`) {\r\n                                click(`https://rickandmortyapi.com/api/character/?page=${num}`);\r\n                                updatePage(`?page=${num}`);\r\n                            }\r\n                        }\r\n                    }>\r\n                    {num}\r\n                </PageLine.Li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <PageLine.Wrapper>\r\n                <PageLine.Ul>\r\n                    {pagesJSX}\r\n                </PageLine.Ul>\r\n            </PageLine.Wrapper>\r\n        );\r\n    }\r\n}\r\n","// Core\r\nimport styled from \"styled-components\";\r\n\r\nexport default {\r\n    Conteiner: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    `,\r\n    Wrapper: styled.div`\r\n        color: #777;\r\n        font-size: 0.9rem;\r\n        font-weight: 700;\r\n        background-color:#fff;\r\n        border: 1px solid #fefefe;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        margin: 1rem;\r\n        box-shadow: 2px 2px 5px #ccc;\r\n    `,\r\n    Select: styled.select`\r\n        margin: 0.1rem;\r\n        padding: 0.3rem;\r\n        border: 1px solid #bbb;\r\n        border-radius: 3px;\r\n        color: #333;\r\n        font-size: 1rem;\r\n    `,\r\n};\r\n","// Core\r\nimport React from 'react';\r\n\r\n// Styled\r\nimport Sort from \"./sorting.view.js\";\r\n\r\nexport default class Sorting extends React.Component {\r\n    _handleChange = (event) => {\r\n        this.props._updateSorting(event.target.value);\r\n    };\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Sort.Conteiner>\r\n                <Sort.Wrapper>\r\n                    <span>Sort by: </span>\r\n                    <Sort.Select\r\n                        onChange = { this._handleChange }>\r\n                        <option value = ''>---</option>\r\n                        <option value = 'name'>Name</option>\r\n                        <option value = 'status'>Status</option>\r\n                        <option value = 'species'>Species</option>\r\n                    </Sort.Select>\r\n                </Sort.Wrapper>\r\n            </Sort.Conteiner>\r\n        );\r\n    }\r\n}\r\n","// Core\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\n// Components\nimport {\n    Header,\n    Feed,\n    Footer\n} from './components';\n\nfunction App () {\n    return (\n        <div className = 'App'>\n            <Header />\n            {/* <Feed /> */}\n            <Route component = { Feed } path = '/?page=:number' />\n            <Route component = { Feed } path = '/' />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Router\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}