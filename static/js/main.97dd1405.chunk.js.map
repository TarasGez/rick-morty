{"version":3,"sources":["components/Loader/loading.gif","logo.png","components/Loader/loader.view.js","components/Loader/index.js","components/Header/index.js","components/Footer/footer.view.js","components/Footer/index.js","components/Feed/feed.view.js","REST/api.js","components/Feed/index.js","instruments/index.js","components/Character/card.view.js","components/CardPaper/cardView.view.js","components/CardPaper/index.js","components/Character/index.js","components/ButtonPage/button.view.js","components/ButtonPage/index.js","components/Buttons/index.js","components/Pagination/pagination.view.js","components/Pagination/index.js","components/Sorting/sorting.view.js","components/Sorting/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Div","styled","div","Span","span","Image","img","Loader","alt","src","loading","React","Component","Header","href","title","height","logo","FooterDiv","Footer","Container","api","fetchCards","URL","link","fetch","response","json","results","info","Feed","state","characters","sortingType","isCardsFetching","currentPage","_setCardsFetchingState","setState","_fetchCardsAsync","a","data","_updateSorting","type","_updateCurrentPage","pageString","props","history","push","window","location","search","_increasePageAsync","next","replace","_decreasePageAsync","prev","this","cards","disPrev","disNext","charactersJSX","sort","card1","card2","name","sortByName","status","sortByStatus","species","sortBySpecies","map","character","key","id","toRender","decreasePage","increasePage","page","click","updatePage","duration","typeName","Wrapper","Title","h3","Info","ul","dis","centerX","topPos","leftPos","CardPaper","top","left","width","windowHeight","windowWidth","componentDidMount","_updateDimensions","addEventListener","_savePosition","selector","createRef","w","d","document","documentElement","body","querySelector","innerHeight","clientHeight","innerWidth","clientWidth","rect","current","getBoundingClientRect","_click","_timer","timer","setTimeout","clearTimeout","display","topScroll","scrollY","center2Div","className","ref","onClick","image","gender","origin","Character","cardView","_showCard","Button","button","disabled","ButtonPage","text","Buttons","Ul","Li","li","Pagination","maxPage","pages","pagesJSX","Array","val","i","num","Conteiner","Select","select","Sorting","_handleChange","event","target","value","onChange","App","component","path","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,2qBCG5B,OACXC,IAAKC,IAAOC,IAAT,KAIHC,KAAMF,IAAOG,KAAT,KAOJC,MAAOJ,IAAOK,IAAT,MCRYC,E,iLAEb,OACI,kBAAC,EAAQP,IAAT,KACI,kBAAC,EAAQK,MAAT,CACIG,IAAM,UACNC,IAAQC,MAEZ,kBAAC,EAAQP,KAAT,wB,GARoBQ,IAAMC,W,iBCH3B,SAASC,IACpB,OACI,gCACI,uBAAGC,KAAO,cAAcC,MAAQ,gBAC5B,yBAAKP,IAAM,OAAOQ,OAAS,QAAQP,IAAQQ,Q,0NCL3D,IAQeC,EARGjB,IAAOC,IAAV,KCGA,SAASiB,IACpB,OACI,kBAAC,EAAD,0B,8PCLR,IAQeC,EARGnB,IAAOC,IAAV,KCHFmB,EAAM,CACTC,WADS,iDACGC,GADH,qFAGLC,EAAOD,GAAY,6CAHd,SAKYE,MAAMD,GALlB,cAKLE,EALK,gBAOqBA,EAASC,OAP9B,uBAOHC,EAPG,EAOHA,QAASC,EAPN,EAOMA,KAPN,kBASJ,CAAED,UAASC,SATP,iGCoBEC,E,2MACjBC,MAAQ,CACJF,KAAiB,GACjBG,WAAiB,GACjBC,YAAiB,GACjBC,iBAAiB,EACjBC,YAAiB,W,EAerBC,uBAAyB,SAACL,GACtB,EAAKM,SAAS,CACVH,gBAAiBH,K,EAIzBO,iB,sCAAmB,WAAOd,GAAP,mBAAAe,EAAA,4DACf,EAAKH,wBAAuB,GADb,SAGIf,EAAIC,WAAWE,GAHnB,OAGTgB,EAHS,OAITR,EAAaQ,EAAKZ,QAClBC,EAAOW,EAAKX,KAElB,EAAKQ,SAAS,CACVR,OACAG,aACAE,iBAAiB,IAVN,yC,wDAenBO,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEJ,YAAaS,K,EAGjCC,mBAAqB,SAACC,GACdA,GAEA,EAAKC,MAAMC,QAAQC,KAAKH,GAExB,EAAKP,SAAS,CACVF,YAAaS,KAGjB,EAAKP,SAAS,CACVF,YAAaa,OAAOC,SAASC,U,EAKzCC,mBAAqB,WACjB,EAAKR,mBACD,EAAKZ,MAAMF,KAAKuB,KAAKC,QAAQ,6CAA8C,KAE/E,EAAKf,iBAAiB,EAAKP,MAAMF,KAAKuB,O,EAG1CE,mBAAqB,WACjB,EAAKX,mBACD,EAAKZ,MAAMF,KAAK0B,KAAKF,QAAQ,6CAA8C,KAE/E,EAAKf,iBAAiB,EAAKP,MAAMF,KAAK0B,O,mFA9DlCP,OAAOC,SAASC,QAChBM,KAAKlB,iBAAL,oDACiDU,OAAOC,SAASC,SAEjEM,KAAKb,sBAGLa,KAAKlB,qB,+BA0DF,ICrDaI,EAAMe,EDqDpB,EAOFD,KAAKzB,MALLG,EAFE,EAEFA,gBACAF,EAHE,EAGFA,WACAC,EAJE,EAIFA,YACAJ,EALE,EAKFA,KACAM,EANE,EAMFA,YAGEuB,GAAWF,KAAKzB,MAAMF,KAAK0B,KAC3BI,GAAWH,KAAKzB,MAAMF,KAAKuB,KAE3BQ,GCjEclB,EDiEcT,ECjERwB,EDiEqBzB,EChEtC,SAATU,EA3CkB,SAACe,GACvB,OAAOA,EAAMI,KAAK,SAACC,EAAOC,GACtB,OAAID,EAAME,KAAOD,EAAMC,KACZ,EAEPF,EAAME,KAAOD,EAAMC,MAEX,EAGL,IAkCAC,CAAWR,GACF,WAATf,EA/Ba,SAACe,GACzB,OAAOA,EAAMI,KAAK,SAACC,EAAOC,GACtB,OAAID,EAAMI,OAASH,EAAMG,OACd,EAEPJ,EAAMI,OAASH,EAAMG,QAEb,EAGL,IAsBAC,CAAaV,GACJ,YAATf,EAnBc,SAACe,GAC1B,OAAOA,EAAMI,KAAK,SAACC,EAAOC,GACtB,OAAID,EAAMM,QAAUL,EAAMK,QACf,EAEPN,EAAMM,QAAUL,EAAMK,SAEd,EAGL,IAUAC,CAAcZ,GAGlBA,GDwDwDa,IAAI,SAACC,GAC5D,OACI,kBAAC,EAAD,eACIC,IAAQD,EAAUE,IACbF,MAKXG,EAAWxC,EAAkB,kBAAC,EAAD,MAEnC,oCACI,kBAAC,EAAD,CACIyC,aAAiBnB,KAAKF,mBACtBK,QAAYA,EACZD,QAAYA,EACZkB,aAAiBpB,KAAKL,mBACtB0B,KAAS1C,IAGb,6BACI,kBAAC,GAAD,CACI2C,MAAUtB,KAAKlB,iBACfT,KAASA,EACTgD,KAAS1C,EACT4C,WAAevB,KAAKb,sBAI5B,6BACI,kBAAC,GAAD,CAASF,eAAmBe,KAAKf,kBAGrC,6BACI,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAUuC,SAAa,IAAMC,SAAa,MACrCrB,MAOjB,OACI,oCACKc,O,GApIiB9D,a,guBEjBnB,OACXsE,QAASjF,IAAOC,IAAT,KAWPiF,MAAOlF,IAAOmF,GAAT,KAGLC,KAAMpF,IAAOqF,GAAT,KAKJjF,MAAOJ,IAAOK,IAAT,M,wdCpBM,OACX4E,QAASjF,IAAOC,IAAT,IACD,SAAC2C,GAAD,OAAWA,EAAM0C,IAAN,4HAKD1C,EAAM2C,QALL,4sBAgCF3C,EAAM4C,OAhCJ,0DAkCD5C,EAAM6C,QAlCL,oLA8CjBP,MAAOlF,IAAOmF,GAAT,KAGLC,KAAMpF,IAAOqF,GAAT,KAKJjF,MAAOJ,IAAOK,IAAT,MCrDYqF,E,2MACjB5D,MAAQ,CACJ6D,IAAS,EACTC,KAAS,EACTL,QAAS,EACTM,MAAS,EACT9E,OAAS,EAET+E,aAAc,EACdC,YAAc,G,EAGlBC,kBAAoB,WAChB,EAAKC,oBAELlD,OAAOmD,iBAAiB,SAAU,EAAKD,mBACvClD,OAAOmD,iBAAiB,SAAU,EAAKD,mBAEvC,EAAKE,iB,EAGTC,SAAW1F,IAAM2F,Y,EAEjBJ,kBAAoB,WAChB,IAAMK,EAAIvD,OACJwD,EAAIC,SACJC,EAAkBF,EAAEE,gBACpBC,EAAOH,EAAEI,cAAc,QAEvBb,EAAeQ,EAAEM,aAAcH,EAAgBI,cAAeH,EAAKG,aACnEd,EAAcO,EAAEQ,YAAcL,EAAgBM,aAAeL,EAAKK,YAExE,EAAK3E,SAAS,CACV0D,eACAC,iB,EAIRI,cAAgB,WACZ,IAAMa,EAAO,EAAKZ,SAASa,QAAQC,wBAEnC,EAAK9E,SAAS,CACVwD,KAAMoB,EAAKpB,KACXD,IAAMqB,EAAKrB,O,EAInBwB,OAAS,WACL,EAAKvE,MAAMiC,S,EAGfuC,OAAS,WACL,IAAMC,EAAQC,WAAW,EAAKH,SAAU,KAExCI,aAAaF,I,wEAGN,IAAD,EACyB9D,KAAKX,MAA5B0B,EADF,EACEA,UAAWkD,EADb,EACaA,QADb,EAE6BjE,KAAKzB,MAAhC8D,EAFF,EAEEA,KAAMD,EAFR,EAEQA,IAAKI,EAFb,EAEaA,YAGb0B,EAAY9B,EAAM5C,OAAO2E,QAEzBjF,EAAQ6B,EAAU7B,KAAO,4BAAI,qCAAJ,IAAoB6B,EAAU7B,MAAa,GAEpEkF,EAAa5B,EAAc,IAAMA,EAAY,EAAI,IAAM,KAAMA,EAMnE,OACI,kBAAC,EAASd,QAAV,CACIM,QAAYoC,EACZC,UAAcrE,KAAKX,MAAMgF,UACzBtC,IAAQkC,EACR/B,QAAYG,EACZiC,IAAQtE,KAAK6C,SACbZ,OAAWiC,EACXK,QAAYvE,KAAK4D,QACjB,6BACI,kBAAC,EAAS/G,MAAV,CACII,IAAQ8D,EAAUyD,MAClBjH,MAAUwD,EAAUP,QAG5B,kBAAC,EAASmB,MAAV,KAAiBZ,EAAUP,MAC3B,kBAAC,EAASqB,KAAV,KACI,4BAAI,gCAAQ,uCAAR,IAA0Bd,EAAUL,SACxC,4BAAI,wCAAJ,IAAuBK,EAAUH,SACjC,4BAAI,uCAAJ,IAAsBG,EAAU0D,QAC/BvF,EACD,4BAAI,6BAAM,uCAAV,IAA4B6B,EAAU2D,OAAOlE,MAC7C,4BAAI,yCAAJ,IAAwBO,EAAUtB,SAASe,Y,GA9FxBpD,aCGlBuH,E,2MACjBpG,MAAQ,CACJqG,UAAU,G,EAEdC,UAAY,WACR,EAAKhG,SAAS,CACV+F,UAAW,EAAKrG,MAAMqG,Y,wEAK1B,IAAM7D,EAAYf,KAAKX,MAEjBH,EAAQ6B,EAAU7B,KAAO,4BAAI,qCAAJ,IAAoB6B,EAAU7B,MAAa,GAE1E,OACI,yBACImF,UAAY,SACZE,QAAYvE,KAAK6E,WACjB,kBAAC,EAAD,CACI9D,UAAcA,EACdsD,UAAcrE,KAAKzB,MAAMqG,SAAW,OAAS,SAC7CtD,MAAUtB,KAAK6E,UACfZ,QAAYjE,KAAKzB,MAAMqG,WAE3B,kBAAC,EAAKlD,QAAN,KACI,kBAAC,EAAK7E,MAAN,CACII,IAAQ8D,EAAUyD,MAClBjH,MAAUwD,EAAUP,OAExB,kBAAC,EAAKmB,MAAN,KAAaZ,EAAUP,MACvB,kBAAC,EAAKqB,KAAN,KACI,4BAAI,gCAAQ,uCAAR,IAA0Bd,EAAUL,SACxC,4BAAI,wCAAJ,IAAuBK,EAAUH,SACjC,4BAAI,uCAAJ,IAAsBG,EAAU0D,QAC/BvF,S,GAnCc9B,a,0XCNvC,IAsBe0H,EAtBArI,IAAOsI,OAAV,IAYF,SAAC1F,GAAD,OAAWA,EAAM2F,SAAN,oJAOV,KCDIC,EAfI,SAAC5F,GAMhB,OACI,kBAAC,EAAD,CACI2F,SAAa3F,EAAM2F,SACnBT,QAPY,WAChBlF,EAAMiC,UAODjC,EAAM6F,OCOJC,EAjBC,SAAC9F,GACb,OACI,6BACI,kBAAC,EAAD,CACIiC,MAAUjC,EAAM8B,aAChB6D,SAAa3F,EAAMa,QACnBgF,KAAO,YAEX,kBAAC,EAAD,CACI5D,MAAUjC,EAAM+B,aAChB4D,SAAa3F,EAAMc,QACnB+E,KAAO,c,2rBCdR,QACXxD,QAASjF,IAAOC,IAAT,MAKP0I,GAAI3I,IAAOqF,GAAT,MAMFuD,GAAI5I,IAAO6I,GAAT,IAWI,SAACjG,GAAD,OAAWA,EAAM2F,SAAN,oJAOV,MC3BUO,G,iLACN,IAAD,SACoCvF,KAAKX,MAAvCgC,EADF,EACEA,KAAMC,EADR,EACQA,MAAOjD,EADf,EACeA,KAAMkD,EADrB,EACqBA,WAErBiE,EAAUnH,EAAKoH,MAGfC,EAFW,YAAI,IAAIC,MAAMH,IAAU1E,IAAI,SAAC8E,EAAKC,GAAN,OAAY,EAAKD,IAAMC,EAAE,IAE5C/E,IAAI,SAACgF,GAC3B,OACI,kBAAC,GAAST,GAAV,CACIL,SAAa3D,IAAI,gBAAcyE,GAC/B9E,IAAQ8E,EACRvB,QACI,WACQlD,IAAI,gBAAcyE,KAClBxE,EAAM,mDAAD,OAAoDwE,IACzDvE,EAAW,SAAD,OAAUuE,OAI/BA,KAKb,OACI,kBAAC,GAASpE,QAAV,KACI,kBAAC,GAAS0D,GAAV,KACKM,Q,GA5BmBtI,a,8rBCHzB,QACX2I,UAAWtJ,IAAOC,IAAT,MAITgF,QAASjF,IAAOC,IAAT,MAWPsJ,OAAQvJ,IAAOwJ,OAAT,OCbWC,G,2MACjBC,cAAgB,SAACC,GACb,EAAK/G,MAAMJ,eAAemH,EAAMC,OAAOC,Q,wEAKvC,OACI,kBAAC,GAAKP,UAAN,KACI,kBAAC,GAAKrE,QAAN,KACI,2CACA,kBAAC,GAAKsE,OAAN,CACIO,SAAavG,KAAKmG,eAClB,4BAAQG,MAAQ,IAAhB,OACA,4BAAQA,MAAQ,QAAhB,QACA,4BAAQA,MAAQ,UAAhB,UACA,4BAAQA,MAAQ,WAAhB,kB,GAhBanJ,IAAMC,WCkB5BoJ,OAZf,WACI,OACI,yBAAKnC,UAAY,OACb,kBAAChH,EAAD,MAEA,kBAAC,IAAD,CAAOoJ,UAAcnI,EAAOoI,KAAO,mBACnC,kBAAC,IAAD,CAAOD,UAAcnI,EAAOoI,KAAO,MACnC,kBAAC/I,EAAD,QCPQgJ,QACW,cAA7BnH,OAAOC,SAASmH,UAEe,UAA7BpH,OAAOC,SAASmH,UAEhBpH,OAAOC,SAASmH,SAASC,MACvB,2D,aCTNC,IAASC,OACL,kBAAC,KAAD,KACI,kBAAC,GAAD,OACO9D,SAAS+D,eAAe,SDqHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.97dd1405.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.f2eb2355.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","// Core\nimport styled from \"styled-components\";\n\nexport default {\n    Div: styled.div`\n        text-align: center;\n        margin: auto;\n    `,\n    Span: styled.span`\n        display: inline-block;\n        font-size: 11vw;\n        color: #83cc82;\n        padding-top:6px;\n        vertical-align: top;\n    `,\n    Image: styled.img`\n        height: 15vw;\n    `,\n};\n","// Core\nimport React from 'react';\nimport loading from './loading.gif';\n\n// Styled\nimport Spinner from \"./loader.view.js\";\n\nexport default class Loader extends React.Component {\n    render () {\n        return (\n            <Spinner.Div>\n                <Spinner.Image\n                    alt = 'loading'\n                    src = { loading }\n                />\n                <Spinner.Span>Loading...</Spinner.Span>\n            </Spinner.Div>\n        );\n    }\n}\n","// Core\nimport React from 'react';\nimport logo from '../../logo.png';\n\nexport default function Header () {\n    return (\n        <header>\n            <a href = '/rick-morty' title = 'To main page'>\n                <img alt = 'logo' height = '100px' src = { logo } />\n            </a>\n        </header>\n    );\n}\n","// Core\nimport styled from \"styled-components\";\n\nconst FooterDiv = styled.div`\n        text-align: center;\n        margin: 3rem 0 0 0;\n        padding: 1.5rem;\n        background-color: #6f6f6f;\n        color: white;\n    `;\n\nexport default FooterDiv;\n","// Core\nimport React from 'react';\n\n// Styled\nimport FooterDiv from \"./footer.view.js\";\n\nexport default function Footer () {\n    return (\n        <FooterDiv>\n            &copy; Rick & Morty\n        </FooterDiv>\n    );\n}\n","// Core\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n        text-align: center;\n        margin: 1rem;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-around;\n    `;\n\nexport default Container;\n","export const api = {\n    async fetchCards (URL) {\n\n        const link = URL ? URL : \"https://rickandmortyapi.com/api/character/\";\n\n        const response = await fetch(link);\n\n        const { results, info } = await response.json();\n\n        return { results, info };\n    },\n};\n","// Core\nimport React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\n\n// Components\nimport {\n    Loader,\n    Character,\n    Pagination,\n    Buttons,\n    Sorting\n} from '../../components';\n\n// Styled\nimport Container from \"./feed.view.js\";\n\n// Instruments\nimport { api } from '../../REST';\nimport { sortByGroup } from '../../instruments';\n\nexport default class Feed extends Component {\n    state = {\n        info:            {},\n        characters:      [],\n        sortingType:     '',\n        isCardsFetching: false,\n        currentPage:     \"?page=1\",\n    };\n\n    componentDidMount () {\n        if (window.location.search) {\n            this._fetchCardsAsync(\n                `https://rickandmortyapi.com/api/character/${window.location.search}`\n            );\n            this._updateCurrentPage();\n\n        } else {\n            this._fetchCardsAsync();\n        }\n    }\n\n    _setCardsFetchingState = (state) => {\n        this.setState({\n            isCardsFetching: state,\n        });\n    }\n\n    _fetchCardsAsync = async (link) => {\n        this._setCardsFetchingState(true);\n\n        const data = await api.fetchCards(link);\n        const characters = data.results;\n        const info = data.info;\n\n        this.setState({\n            info,\n            characters,\n            isCardsFetching: false,\n        });\n\n    };\n\n    _updateSorting = (type) => {\n        this.setState({ sortingType: type });\n    };\n\n    _updateCurrentPage = (pageString) => {\n        if (pageString) {\n\n            this.props.history.push(pageString);\n\n            this.setState({\n                currentPage: pageString,\n            });\n        } else {\n            this.setState({\n                currentPage: window.location.search,\n            });\n        }\n    }\n\n    _increasePageAsync = () => {\n        this._updateCurrentPage(\n            this.state.info.next.replace('https://rickandmortyapi.com/api/character/', '')\n        );\n        this._fetchCardsAsync(this.state.info.next);\n    }\n\n    _decreasePageAsync = () => {\n        this._updateCurrentPage(\n            this.state.info.prev.replace('https://rickandmortyapi.com/api/character/', '')\n        );\n        this._fetchCardsAsync(this.state.info.prev);\n    }\n\n    render () {\n        const {\n            isCardsFetching,\n            characters,\n            sortingType,\n            info,\n            currentPage,\n        } = this.state;\n\n        const disPrev = !this.state.info.prev;\n        const disNext = !this.state.info.next;\n\n        const charactersJSX = sortByGroup(sortingType, characters).map((character) => {\n            return (\n                <Character\n                    key = { character.id }\n                    { ...character }\n                />\n            );\n        });\n\n        const toRender = isCardsFetching ? <Loader /> :\n\n        <>\n            <Buttons\n                decreasePage = { this._decreasePageAsync }\n                disNext = { disNext }\n                disPrev = { disPrev }\n                increasePage = { this._increasePageAsync }\n                page = { currentPage }\n            />\n\n            <div>\n                <Pagination\n                    click = { this._fetchCardsAsync }\n                    info = { info }\n                    page = { currentPage }\n                    updatePage = { this._updateCurrentPage }\n                />\n            </div>\n\n            <div>\n                <Sorting _updateSorting = { this._updateSorting } />\n            </div>\n\n            <div>\n                <Container>\n                    <FlipMove duration = { 500 } typeName = { null } >\n                        {charactersJSX}\n                    </FlipMove>\n                </Container>\n            </div>\n\n        </>;\n\n        return (\n            <>\n                {toRender}\n            </>\n        );\n    }\n}\n","export const sortByName = (cards) => {\n    return cards.sort((card1, card2) => {\n        if (card1.name > card2.name) {\n            return 1;\n        } else if (\n            card1.name < card2.name\n        ) {\n            return -1;\n        }\n\n        return 0;\n    });\n};\n\nexport const sortByStatus = (cards) => {\n    return cards.sort((card1, card2) => {\n        if (card1.status > card2.status) {\n            return 1;\n        } else if (\n            card1.status < card2.status\n        ) {\n            return -1;\n        }\n\n        return 0;\n    });\n};\n\nexport const sortBySpecies = (cards) => {\n    return cards.sort((card1, card2) => {\n        if (card1.species > card2.species) {\n            return 1;\n        } else if (\n            card1.species < card2.species\n        ) {\n            return -1;\n        }\n\n        return 0;\n    });\n};\n\nexport const sortByGroup = (type, cards) => {\n    if (type === 'name') {\n        return sortByName(cards);\n    } else if (type === 'status') {\n        return sortByStatus(cards);\n    } else if (type === 'species') {\n        return sortBySpecies(cards);\n    }\n\n    return cards;\n};\n","// Core\nimport styled from \"styled-components\";\n\nexport default {\n    Wrapper: styled.div`\n        width: 200px;\n        display: flex;\n        flex-direction: column;\n        background-color:#eee;\n        border: 1px solid #fefefe;\n        border-radius: 3px;\n        padding: 20px;\n        margin: 1rem;\n        box-shadow: 2px 2px 5px #ccc;\n    `,\n    Title: styled.h3`\n        margin-bottom: 10px;\n    `,\n    Info: styled.ul`\n        list-style: none;\n        margin: 0;\n        padding:0;\n    `,\n    Image: styled.img`\n        width: 200px;\n        height: 200px;\n        border-radius: 3px;\n    `,\n};\n","// Core\nimport styled from \"styled-components\";\n\nexport default {\n    Wrapper: styled.div`\n        ${(props) => props.dis ? `\n            position: fixed;\n            \n            top: 1.5rem;\n            bottom: 0;\n            left: ${props.centerX}px;\n            right: 0;\n\n            overflow: scroll;\n            opacity: 1;\n            \n            width: 500px;\n            height: 750px\n            max-width: 70%;\n            max-height: 90%;\n            padding: 30px;\n\n            background-color:#eee;\n            border: 1px solid #fefefe;\n            border-radius: 15px;\n            box-shadow: 2px 2px 5px #ccc;\n            font-size: 2rem;\n\n            transition: opacity 300ms,\n                        height  200ms,\n                        width   200ms,\n                        top     300ms,\n                        left    300ms;\n        };\n        `: `\n            position: relative;\n\n            top: ${props.topPos}px;\n            bottom: 0;\n            left: ${props.leftPos}px;\n            right: 0;\n\n            opacity: 0;\n            overflow: hidden;\n\n            width: 0px;\n            height: 0px;\n            padding: 0px;\n        `}\n       \n    `,\n    Title: styled.h3`\n        margin-bottom: 10px;\n    `,\n    Info: styled.ul`\n        list-style: none;\n        margin: 0;\n        padding:0;\n    `,\n    Image: styled.img`\n        height: 100%;\n        border-radius: 10px;\n    `,\n};\n","// Core\nimport React, { Component } from 'react';\n\n// Styled\nimport CardView from \"./cardView.view.js\";\n\nexport default class CardPaper extends Component {\n    state = {\n        top:     0,\n        left:    0,\n        centerX: 0,\n        width:   0,\n        height:  0,\n\n        windowHeight: 0,\n        windowWidth:  0,\n    }\n\n    componentDidMount = () => {\n        this._updateDimensions();\n\n        window.addEventListener('resize', this._updateDimensions);\n        window.addEventListener('scroll', this._updateDimensions);\n\n        this._savePosition();\n    }\n\n    selector = React.createRef();\n\n    _updateDimensions = () => {\n        const w = window;\n        const d = document;\n        const documentElement = d.documentElement;\n        const body = d.querySelector('body');\n\n        const windowHeight = w.innerHeight|| documentElement.clientHeight|| body.clientHeight;\n        const windowWidth = w.innerWidth || documentElement.clientWidth || body.clientWidth;\n\n        this.setState({\n            windowHeight,\n            windowWidth,\n        });\n    };\n\n    _savePosition = () => {\n        const rect = this.selector.current.getBoundingClientRect();\n\n        this.setState({\n            left: rect.left,\n            top:  rect.top,\n        });\n    }\n\n    _click = () => {\n        this.props.click();\n    }\n\n    _timer = () => {\n        const timer = setTimeout(this._click(), 100);\n\n        clearTimeout(timer);\n    }\n\n    render () {\n        const { character, display } = this.props;\n        const { left, top, windowWidth } = this.state;\n\n        // If the window was scrolled by Y - window.scrollY\n        const topScroll = top - window.scrollY;\n\n        const type =  character.type ? <li><em>type:</em> {character.type}</li> : \"\";\n\n        const center2Div = windowWidth > 500 ? windowWidth/2 - 250 : 0.075*windowWidth;\n\n        // if (this.props.className === 'fade') {\n        //     this._timer;\n        // }\n\n        return (\n            <CardView.Wrapper\n                centerX = { center2Div }\n                className = { this.props.className }\n                dis = { display }\n                leftPos = { left }\n                ref = { this.selector }\n                topPos = { topScroll }\n                onClick = { this._click }>\n                <div>\n                    <CardView.Image\n                        src = { character.image }\n                        title = { character.name }\n                    />\n                </div>\n                <CardView.Title>{character.name}</CardView.Title>\n                <CardView.Info>\n                    <li><strong><em>status:</em> {character.status}</strong></li>\n                    <li><em>species:</em> {character.species}</li>\n                    <li><em>gender:</em> {character.gender}</li>\n                    {type}\n                    <li><br /><em>origin:</em> {character.origin.name}</li>\n                    <li><em>location:</em> {character.location.name}</li>\n                </CardView.Info>\n            </CardView.Wrapper>\n        );\n    }\n}\n","// Core\nimport React, { Component } from 'react';\n\n// Styled\nimport Card from \"./card.view.js\";\n\n// Components\nimport CardPaper from \"../CardPaper\";\n\nexport default class Character extends Component {\n    state = {\n        cardView: false,\n    }\n    _showCard = () => {\n        this.setState({\n            cardView: !this.state.cardView,\n        });\n    }\n\n    render () {\n        const character = this.props;\n\n        const type =  character.type ? <li><em>type:</em> {character.type}</li> : \"\";\n\n        return (\n            <div\n                className = 'button'\n                onClick = { this._showCard }>\n                <CardPaper\n                    character = { character }\n                    className = { this.state.cardView ? 'fade' : 'hidden' }\n                    click = { this._showCard }\n                    display = { this.state.cardView }\n                />\n                <Card.Wrapper>\n                    <Card.Image\n                        src = { character.image }\n                        title = { character.name }\n                    />\n                    <Card.Title>{character.name}</Card.Title>\n                    <Card.Info>\n                        <li><strong><em>status:</em> {character.status}</strong></li>\n                        <li><em>species:</em> {character.species}</li>\n                        <li><em>gender:</em> {character.gender}</li>\n                        {type}\n                    </Card.Info>\n                </Card.Wrapper>\n            </div>\n        );\n    }\n}\n","// Core\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n        text-align: center;\n        margin: .5rem;\n        padding: 1rem 1.5rem;\n        color: white;\n        background: #83cc82;\n        border: 1px solid #ededed;\n        border-radius: 3px;\n        cursor: pointer;\n        &:hover{\n          background: #00b0c7;\n        };\n        ${(props) => props.disabled ? `\n        opacity: 0.5;\n        cursor: default;\n        background: #ddd;\n        &:hover{\n          background: #ddd;\n        };\n        `: \"\"}\n    `;\n\nexport default Button;\n","// Core\nimport React from 'react';\n\n// Styled\nimport Button from \"./button.view.js\";\n\nconst ButtonPage = (props) => {\n\n    const _changePage = () => {\n        props.click();\n    };\n\n    return (\n        <Button\n            disabled = { props.disabled }\n            onClick = { _changePage }>\n            {props.text}\n        </Button>\n    );\n};\n\nexport default ButtonPage;\n","// Core\nimport React from 'react';\n\n// Compomemts\nimport ButtonPage from \"../ButtonPage\";\n\nconst Buttons = (props) => {\n    return (\n        <div>\n            <ButtonPage\n                click = { props.decreasePage }\n                disabled = { props.disPrev }\n                text = '<< Prev'\n            />\n            <ButtonPage\n                click = { props.increasePage }\n                disabled = { props.disNext }\n                text = 'Next >>'\n            />\n        </div>\n    );\n};\n\nexport default Buttons;\n","// Core\nimport styled from \"styled-components\";\n\nexport default {\n    Wrapper: styled.div`\n        display: flex;\n        justify-content: center;\n        margin: 1rem;\n  `,\n    Ul: styled.ul`\n        display: flex;\n        flex-wrap: wrap;\n        list-style: none;\n        padding:0;\n  `,\n    Li: styled.li`\n        padding:5px;\n        margin: 3px;\n        cursor: pointer;\n        background-color:#fff;\n        border: 1px solid #eee;\n        border-radius: 3px;\n        box-shadow: 1px 1px 3px #ccc;\n        color: #00afc7;\n        font-weight: 700;\n        size: .8rem;\n        ${(props) => props.disabled ? `\n        opacity: 0.5;\n        cursor: default;\n        background: #ddd;\n        &:hover{\n          background: #ddd;\n        };\n        `: \"\"}\n  `,\n};\n","// Core\nimport React, { Component } from 'react';\n\n// Styled\nimport PageLine from \"./pagination.view.js\";\n\nexport default class Pagination extends Component {\n    render () {\n        const { page, click, info, updatePage } = this.props;\n\n        const maxPage = info.pages;\n        const pageList = [...new Array(maxPage)].map((val, i) => this.val = i+1);\n\n        const pagesJSX = pageList.map((num) => {\n            return (\n                <PageLine.Li\n                    disabled = { page === `?page=${num}` }\n                    key = { num }\n                    onClick = {\n                        () => {\n                            if (page !== `?page=${num}`) {\n                                click(`https://rickandmortyapi.com/api/character/?page=${num}`);\n                                updatePage(`?page=${num}`);\n                            }\n                        }\n                    }>\n                    {num}\n                </PageLine.Li>\n            );\n        });\n\n        return (\n            <PageLine.Wrapper>\n                <PageLine.Ul>\n                    {pagesJSX}\n                </PageLine.Ul>\n            </PageLine.Wrapper>\n        );\n    }\n}\n","// Core\nimport styled from \"styled-components\";\n\nexport default {\n    Conteiner: styled.div`\n    display: flex;\n    justify-content: center;\n    `,\n    Wrapper: styled.div`\n        color: #777;\n        font-size: 0.9rem;\n        font-weight: 700;\n        background-color:#fff;\n        border: 1px solid #fefefe;\n        border-radius: 3px;\n        padding: 20px;\n        margin: 1rem;\n        box-shadow: 2px 2px 5px #ccc;\n    `,\n    Select: styled.select`\n        margin: 0.1rem;\n        padding: 0.3rem;\n        border: 1px solid #bbb;\n        border-radius: 3px;\n        color: #333;\n        font-size: 1rem;\n    `,\n};\n","// Core\nimport React from 'react';\n\n// Styled\nimport Sort from \"./sorting.view.js\";\n\nexport default class Sorting extends React.Component {\n    _handleChange = (event) => {\n        this.props._updateSorting(event.target.value);\n    };\n\n    render () {\n\n        return (\n            <Sort.Conteiner>\n                <Sort.Wrapper>\n                    <span>Sort by: </span>\n                    <Sort.Select\n                        onChange = { this._handleChange }>\n                        <option value = ''>---</option>\n                        <option value = 'name'>Name</option>\n                        <option value = 'status'>Status</option>\n                        <option value = 'species'>Species</option>\n                    </Sort.Select>\n                </Sort.Wrapper>\n            </Sort.Conteiner>\n        );\n    }\n}\n","// Core\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\n// Components\nimport {\n    Header,\n    Feed,\n    Footer\n} from './components';\n\nfunction App () {\n    return (\n        <div className = 'App'>\n            <Header />\n            {/* <Feed /> */}\n            <Route component = { Feed } path = '/?page=:number' />\n            <Route component = { Feed } path = '/' />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Router\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}